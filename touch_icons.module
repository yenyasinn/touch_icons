<?php

use Drupal\Core\File\Exception\FileException;
use \Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_FORM_ID_alter().
 */
function touch_icons_form_system_theme_settings_alter(&$form, FormStateInterface &$form_state, $form_id = NULL) {
  // Work-around for a core bug affecting admin themes. See issue #943212.
  if (isset($form_id)) {
    //return;
  }

  $build_info = $form_state->getBuildInfo();
  if (!(isset($build_info['args'][0]) && ($theme = $build_info['args'][0]))) {
    return;
  }

  $form['touch_icons'] = [
    '#type' => 'details',
    '#title' => t('Touch icons'),
    '#open' => TRUE,
  ];
  $form['touch_icons']['default_touch_icon'] = [
    '#type' => 'checkbox',
    '#title' => t('Use the touch icon supplied by the module'),
    '#default_value' => theme_get_setting('default_touch_icon', $theme),
    '#tree' => FALSE,
  ];
  $form['touch_icons']['settings'] = [
    '#type' => 'container',
    '#states' => [
      // Hide the touch icons settings when using the default touch icon.
      'invisible' => [
        'input[name="default_touch_icons"]' => ['checked' => TRUE],
      ],
    ],
  ];
  $form['touch_icons']['settings']['touch_icon_path'] = [
    '#type' => 'textfield',
    '#title' => t('Path to custom icon'),
    '#default_value' => theme_get_setting('touch_icon_path', $theme),
  ];
  $form['touch_icons']['settings']['touch_icon_upload'] = [
    '#type' => 'file',
    '#title' => t('Upload touch icon image'),
    '#maxlength' => 40,
    '#description' => t("If you don't have direct file access to the server, use this field to upload your touch icon."),
    '#upload_validators' => [
      'file_validate_is_image' => [],
    ],
  ];

  array_unshift($form['#validate'], 'touch_icon_system_theme_settings_form_validate');
  array_unshift($form['#submit'], 'touch_icon_system_theme_settings_form_submit');
}

/**
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function touch_icon_system_theme_settings_form_validate(array &$form, FormStateInterface $form_state) {
  // Check for a new uploaded touch icon.
  $file = _file_save_upload_from_form($form['touch_icons']['settings']['touch_icon_upload'], $form_state, 0);
  if ($file) {
    // Put the temporary file in form_values so we can save it on submit.
    $form_state->setValue('touch_icon_upload', $file);
  }

  // When intending to use the default touch icon, unset the touch icon path.
  if ($form_state->getValue('default_touch_icon')) {
    $form_state->unsetValue('touch_icon_path');
  }

  // If the user provided a path for a logo or favicon file, make sure a file
  // exists at that path.
  if ($form_state->getValue('touch_icon_path')) {
    $path = touch_icon_validate_path($form_state->getValue('touch_icon_path'));
    if (!$path) {
      $form_state->setErrorByName('touch_icon_path', t('The custom touch icon path is invalid.'));
    }
  }
}

/**
 * Helper function for the system_theme_settings form.
 *
 * Attempts to validate normal system paths, paths relative to the public files
 * directory, or stream wrapper URIs. If the given path is any of the above,
 * returns a valid path or URI that the theme system can display.
 *
 * @param string $path
 *   A path relative to the Drupal root or to the public files directory, or
 *   a stream wrapper URI.
 * @return mixed
 *   A valid path that can be displayed through the theme system, or FALSE if
 *   the path could not be validated.
 */
function touch_icon_validate_path($path) {
  $file_system = \Drupal::service('file_system');
  // Absolute local file paths are invalid.
  if ($file_system->realpath($path) == $path) {
    return FALSE;
  }
  // A path relative to the Drupal root or a fully qualified URI is valid.
  if (is_file($path)) {
    return $path;
  }
  // Prepend 'public://' for relative file paths within public filesystem.
  if ($file_system->uriScheme($path) === FALSE) {
    $path = 'public://' . $path;
  }
  if (is_file($path)) {
    return $path;
  }
  return FALSE;
}

/**
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function touch_icon_system_theme_settings_form_submit(array &$form, FormStateInterface $form_state) {
  $values = $form_state->getValues();

  // If the user uploaded a new logo or favicon, save it to a permanent location
  // and use it in place of the default theme-provided file.
  try {
    if (!empty($values['touch_icon_upload'])) {
      $filename = \Drupal::service('file_system')->copy($values['touch_icon_upload']->getFileUri(), file_default_scheme() . '://');

      // Theme settings will be saved in ThemeSettingsForm::submitForm().
      $form_state->setValue('default_touch_icon', 0);
      $form_state->setValue('touch_icon_path', $filename);
      $form_state->unsetValue('touch_icon_upload');
    }
  }
  catch (FileException $e) {
    // Ignore.
  }
}
